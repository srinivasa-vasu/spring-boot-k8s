---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  labels:
    app: "kloudnative"
    kind: "k8s-native"
    version: "1.0.M1"
    group: "humourmind"
  name: "kloudnative"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "kloudnative"
      kind: "k8s-native"
      version: "1.0.M1"
      group: "humourmind"
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/actuator/prometheus'
      labels:
        app: "kloudnative"
        kind: "k8s-native"
        version: "1.0.M1"
        group: "humourmind"
    spec:
      volumes:
        - name: app-config
          configMap:
            name: app-config
      containers:
      - env:
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 10"]
        image: "humourmind/kloudnative:1.0.M1"
        imagePullPolicy: "Always"
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: "/actuator/health/liveness"
            port: 8080
            scheme: "HTTP"
          initialDelaySeconds: 0
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        name: "kloudnative"
        ports:
        - containerPort: 8080
          name: "web"
          protocol: "TCP"
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: "/actuator/health/readiness"
            port: 8080
            scheme: "HTTP"
          initialDelaySeconds: 0
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        volumeMounts:
          - mountPath: /app/config/
            name: app-config
